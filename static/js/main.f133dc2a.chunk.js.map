{"version":3,"sources":["Header.js","Button.js","Form.js","App.js","GlobalStyle.js","reportWebVitals.js","index.js","emoji-body.webp","Canvas.js"],"names":["Header","Button","text","Form","updateMonster","useState","size","numOfEyes","numOfLegs","userInput","setUserInput","handleChange","event","console","log","target","name","Number","value","onSubmit","preventDefault","onChange","type","min","max","Canvas","require","default","App","monster","setMonster","useEffect","className","newMonster","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","GlobalStyle","document","getElementById","eyesArr","Array","fill","legsArr","CanvasStyled","eyes","src","emojiBody","alt","map","_","index","styled","div","props"],"mappings":"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","file":"static/js/main.f133dc2a.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Header() {\n    return (\n        <div>\n            <h1>Emoji Monster Creator</h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Button({text}) {\n    return (\n        <button>\n            {text}\n        </button>\n    )\n}\n","import React, { useState } from 'react'\nimport Button from './Button'\n\nexport default function Form({ updateMonster}) {\n    const [userInput, setUserInput] = useState({\n        size: 1,\n        numOfEyes: 2,\n        numOfLegs: 2\n    })\n    console.log(\"form\", userInput)\n    function handleChange(event) {\n        console.log(\"handleChange\")\n        setUserInput({...userInput, [event.target.name]: Number(event.target.value)})\n    }\n\n    function handleSubmit(event) {\n        console.log(\"handleSubmit\")\n        event.preventDefault()\n        updateMonster(userInput)\n    }\n    return (\n        <form  onSubmit={handleSubmit}>\n        <label>\n            Size:\n            <input onChange={handleChange} type=\"range\" min=\"1\" max=\"5\" name=\"size\" value={userInput.size}/>\n        </label>\n        <label>\n            Number of eyes:\n            <input onChange={handleChange} type=\"range\" min=\"1\" max=\"5\" name=\"numOfEyes\" value={userInput.numOfEyes}/>\n        </label>\n        <label>\n            Number of legs:\n            <input onChange={handleChange} type=\"range\" min=\"1\" max=\"5\" name=\"numOfLegs\" value={userInput.numOfLegs}/>\n        </label>\n        <Button text=\"Create\"></Button>\n    </form>\n    )\n}\n\n","import {useState, useEffect} from 'react'\nimport Form from './Form';\nconst { default: Canvas } = require(\"./Canvas\");\nconst { default: Header } = require(\"./Header\");\n\nfunction App() {\n  const [monster, setMonster] = useState({})\n\n  useEffect(()=> {\n    setMonster(\n      {size: 1, numOfEyes: 2, numOfLegs: 2}\n    )\n  }, [])\n\n  function createMonster(newMonster) {\n    setMonster(newMonster)\n  }\n  return(\n    <div className=\"App\">\n      <Header />\n      <Form updateMonster={createMonster}/>\n      <Canvas monster={monster}/>\n    </div>\n  )\n}\n\nexport default App;\n\n","import { findByLabelText } from '@testing-library/react'\nimport {createGlobalStyle} from 'styled-components'\n\nexport default createGlobalStyle`\n    body {\n        margin: 0;\n        text-align: center;\n        font-family: sans-serif;\n        color: #fff;\n        background: #0F2027;  /* fallback for old browsers */\n        background: -webkit-linear-gradient(to bottom, #2C5364, #203A43, #0F2027);  /* Chrome 10-25, Safari 5.1-6 */\n        background: linear-gradient(to bottom, #2C5364, #203A43, #0F2027); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n    }\n    .App {\n        width: 100%;\n        max-width: 450px;\n        margin: auto;\n        height: 100vh;\n        display: grid;\n        grid-template-rows: auto auto 1fr;\n    }\n    h1 {\n        margin: 15px;\n        font-size: 1.6rem;\n        font-weight: lighter;\n        color: #df860b;\n\n    }\n    input {\n    display: block;\n    width: 80%;\n    margin: auto;\n    margin-bottom: 10px;\n    }\n    button {\n        padding: 10px 15px;\n        margin: 10px;\n        margin-bottom: 20px;\n        \n        font-size: 1rem;\n        background-color: #ce3800;\n        border-radius: 4px;\n        color: #fff;\n        outline: none;\n        border: none;\n         &:active {\n            transform: scale(1.1)\n        }\n    }\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './GlobalStyle';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/emoji-body.4952d68b.webp\";","import styled from 'styled-components/macro'\nimport React from 'react'\nimport emojiBody from './emoji-body.webp'\n\nexport default function Canvas({monster}) {\n    const {size, numOfEyes, numOfLegs} = monster;\n    const eyesArr = Array(numOfEyes).fill()\n    const legsArr = Array(numOfLegs).fill()\n    return (\n        <CanvasStyled size={size} eyes={numOfEyes}>\n            <div className=\"monster\">\n                <img src={emojiBody} alt=\"\"/>\n                <div className=\"eyes\">\n            { eyesArr.map((_, index) => <span key={index}>üëÅ</span>) }\n                </div>\n                <div className=\"legs\">\n            { legsArr.map((_, index) => <span key={index}>ü¶µ</span>) }\n                </div>\n            </div>\n        </CanvasStyled>\n    )\n}\n\nconst CanvasStyled = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n\n.monster {\nmargin-top: -20%;\ntext-align: center;\nposition: relative;\n\nimg {\n    width: ${props => props.size * 50 + 10}px;\n    height: ${props => props.size * 55 + 10}px;\n    position: relative;\n    z-index: 9;\n}\ndiv {\ntransform: scale(${props => props.size +1});\n    display: inline-flex;\n    position: absolute;\n    left: 50%;\n    font-size: ${props => props.size}rem;\n}\n.eyes {\n    display: flex;\n    justify-content: center;\n    flex-direction: row-reverse;\n    flex-wrap: wrap;\n    width: 70%;\n    z-index: 99;\n    top: 12%;\n    transform: translateX(-50%) ;\n    span {\n        height: ${props => props.size * 9}px;\n    }\n    span:first-child {\n        width: ${props => props.eyes % 2 === 1 ? '100%' : 'auto'};  \n    }\n}\n\n.legs {\n        width: 80%;\n        font-size: ${props => props.size * 2 }rem;\n        z-index: 0;\n        bottom: -25%;\n        transform: translateX(-50%) ;\n        display: flex;\n        padding: 0  ${props => props.size * 5 }px;\n        justify-content: space-around;\n    span {\n        display: flex;\n        justify-content: center;\n        width: ${props => props.size * 2}px;\n\n    }\n    span:nth-child(odd) {\n        transform: rotateY(180deg)\n    }\n    span:last-child {\n        transform: rotateY(0)\n    }\n}\n}\n`"],"sourceRoot":""}